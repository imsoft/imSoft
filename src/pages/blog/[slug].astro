---
import "../../styles/global.css";
import Layout from "../../layouts/Layout.astro";
import { translations } from "../../i18n/translations";
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "../../interfaces/PostEntry";

// 1) Aquí dentro definimos el glob para generar las rutas
export function getStaticPaths() {
  const postFiles = import.meta.glob<MarkdownInstance<Frontmatter>>(
    "../../content/blogs/es/*.md",
    { eager: true }
  );
  return Object.keys(postFiles).map((filePath) => {
    const slug = filePath.split("/").pop()!.replace(/\.md$/, "");
    return { params: { slug } };
  });
}

// —————————————————————

// 2) El renderizado de cada post
const slug = Astro.params.slug;
const lang = "es";
const { by, dateFormatOptions } = translations[lang].blog;

// VOLVEMOS a llamar el glob para obtener el contenido
const postFiles = import.meta.glob<MarkdownInstance<Frontmatter>>(
  "../../content/blogs/es/*.md",
  { eager: true }
);
const matchKey = Object.keys(postFiles).find((path) =>
  path.endsWith(`/${slug}.md`)
);
if (!matchKey) {
  throw new Error(`No se encontró el post con slug "${slug}" en ${lang}`);
}
const { frontmatter, Content } = (postFiles as any)[matchKey];

// Formateamos la fecha en español
const formattedDate = new Date(frontmatter.publishedAt).toLocaleDateString(
  "es-MX",
  dateFormatOptions
);
---

<Layout>
  <article class="mx-auto max-w-3xl py-28 sm:py-32">
    <header class="mb-8">
      <h1 class="text-4xl font-bold text-[var(--foreground)]">
        {frontmatter.title}
      </h1>
      <p class="mt-2 text-sm text-[var(--muted-foreground)]">
        {formattedDate} &middot; <span class="italic">{by} {frontmatter.author}</span>
      </p>
      {frontmatter.mainImage && (
        <img
          src={frontmatter.mainImage}
          alt={frontmatter.alt}
          loading="lazy"
          class="w-full rounded-2xl object-cover mt-6"
        />
      )}
      <div class="mt-4 flex flex-wrap gap-x-2 gap-y-1 text-xs">
        {frontmatter.categories.map((cat: string) => (
          <span class="rounded-full bg-[var(--secondary)] px-2 py-1 font-medium text-[var(--secondary-foreground)]">
            {cat}
          </span>
        ))}
      </div>
    </header>

    <hr class="mb-8 border-[var(--border)]" />

    <div class="prose prose-lg mx-auto p-6 rounded-lg prose-headings:text-[var(--foreground)] prose-a:text-[var(--foreground)] prose-strong:text-[var(--foreground)] prose-blockquote:text-[var(--foreground)] text-[var(--foreground)] dark:prose-invert">
      <Content />
    </div>
  </article>
</Layout>
